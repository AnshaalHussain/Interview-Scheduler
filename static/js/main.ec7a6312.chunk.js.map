{"version":3,"sources":["components/DayListItem.js","components/DayList.js","components/Appointment/Header.js","components/Appointment/Show.js","components/Appointment/Empty.js","components/InterviewerListItem.js","components/InterviewerList.js","components/Button.js","components/Appointment/Form.js","components/Appointment/Confirm.js","components/Appointment/Error.js","components/Appointment/Status.js","components/Appointment/index.js","hooks/useVisualMode.js","components/helpers/selectors.js","index.js","components/Application.js","hooks/useApplicationData.js"],"names":["DayListItem","props","spots","dayListItemClass","classNames","day-list__item--selected","selected","day-list__item--full","react_default","a","createElement","className","onClick","setDay","name","concat","DayList","arrayData","days","newArray","item","push","console","log","dayList","map","data","DayListItem_DayListItem","key","id","value","Header","time","Show","student","interviewer","src","alt","onEdit","onDelete","Empty","onAdd","InterviewerListItem","interviewerItemClass","interviewers__item--selected","setInterviewer","avatar","InterviewerList","interviewerList","interviewers","InterviewerListItem_InterviewerListItem","onChange","Button","buttonClass","button--confirm","confirm","button--danger","danger","disabled","children","Form","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setStudent","autoComplete","onSubmit","event","preventDefault","type","placeholder","target","InterviewerList_InterviewerList","Button_Button","onCancel","save","Confirm","message","onConfirm","Error","onClose","Status","EMPTY","SHOW","CREATE","SAVING","DELETING","CONFIRM_DELETE","EDIT","ERROR_SAVE","ERROR_DELETE","Appointment","_useVisualMode","initial","mode","setMode","history","transition","newMode","arguments","length","undefined","pop","back","useVisualMode","interview","bookInterview","then","response","catch","error","cancelInterview","res","err","cancel","getInterview","state","newInterview","interviewId","interviewerInfo","ReactDOM","render","_useApplicationData","day","appointments","setState","calculateSpots","book","spotsCalc","objectSpread","prev","useEffect","Promise","all","axios","get","appointment","defineProperty","put","delete","useApplicationData","objArray","entries","resultDay","appointArray","filter","num","getAppointmentsForDay","dailyInterviewers","interviewArray","getInterviewersForDay","assign","document","getElementById"],"mappings":"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","file":"static/js/main.ec7a6312.chunk.js","sourcesContent":["import React from \"react\";\nimport \"components/DayListItem.scss\";\nimport classNames from \"classnames\";\n\nexport default function DayListItem(props) {\n  const formatSpots = (spots) => {\n    if (spots === 0) {\n      return \"no spots remaining\";\n    }\n    if (spots === 1) {\n      return \"1 spot remaining\";\n    }\n    return `${spots} spots remaining`;\n  };\n\n\n  const dayListItemClass = classNames(\n    \"day-list__item\",\n    {\n      \"day-list__item--selected\": props.selected,\n    },\n    { \"day-list__item--full\": !props.spots }\n  );\n  return (\n    <li className={dayListItemClass} onClick={() => props.setDay(props.name)}>\n      <h2 className=\"text--regular\">{props.name}</h2>\n      <h3 className=\"text--light\">{formatSpots(props.spots)}</h3>\n    </li>\n  );\n}\n","import React from \"react\";\nimport DayListItem from \"./DayListItem\";\n\nexport default function DayList(props) {\n  let arrayData = props.days;\n  let newArray = []\n  for(let item in arrayData) {\n    newArray.push(arrayData[item])\n  }\n\n  console.log(\"srrayData\", newArray);\n  const dayList = newArray.map((data) => (\n    <DayListItem\n      key={data.id}\n      name={data.name}\n      spots={data.spots}\n      selected={data.name === props.value}\n      setDay={props.setDay}\n    />\n  ));\n\n  return <ul>{dayList}</ul>;\n}\n","import React from \"react\";\n\nexport default function Header(props) {\n  return (\n    <header className=\"appointment__time\">\n      <h4 className=\"text--semi-bold\">{props.time}</h4>\n      <hr className=\"appointment__separator\" />\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function Show(props) {\n  return (\n    <main className=\"appointment__card appointment__card--show\">\n      <section className=\"appointment__card-left\">\n        <h2 className=\"text--regular\">{props.student && props.student}</h2>\n        <section className=\"interviewer\">\n          <h4 className=\"text--light\">Interviewer</h4>\n          <h3 className=\"text--regular\">{props.interviewer && props.interviewer.name}</h3>\n        </section>\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/edit.png\"\n            alt=\"Edit\"\n            onClick={() => props.onEdit()}\n          />\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/trash.png\"\n            alt=\"Delete\"\n            onClick={() => props.onDelete(props.student, props.interviewer)}\n          />\n        </section>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function Empty(props) {\n  return (\n    <main className=\"appointment__add\">\n      <img\n        className=\"appointment__add-button\"\n        src=\"images/add.png\"\n        alt=\"Add\"\n        onClick={props.onAdd}\n      />\n    </main>\n  );\n}\n","import React from \"react\";\nimport \"components/InterviewerListItem.scss\";\nimport classNames from \"classnames\";\n\nexport default function InterviewerListItem(props) {\n  const interviewerItemClass = classNames(\"interviewers__item\", {\n    \"interviewers__item--selected\": props.selected,\n  });\n\n  return (\n    <li className={interviewerItemClass} onClick={props.setInterviewer}>\n      <img\n        className=\"interviewers__item-image\"\n        src={props.avatar}\n        alt={props.name}\n      />\n      {props.selected && props.name}\n    </li>\n  );\n}\n","import React from \"react\";\nimport \"components/InterviewerList.scss\";\nimport InterviewerListItem from \"./InterviewerListItem\";\n\nexport default function InterviewerList(props) {\n  const interviewerData = props.interviewers;\n  //console.log(interviewerData)\n  const interviewerList = interviewerData.map((data) => (\n    //console.log(data)\n    <InterviewerListItem\n      key={data.id}\n      avatar={data.avatar}\n      name={data.name}\n      selected={props.value === data.id}\n      setInterviewer={() => props.onChange(data.id)}\n    />\n  ));\n  return (\n    <section className=\"interviewers\">\n      <h4 className=\"interviewers__header text--light\">Interviewer</h4>\n      <ul className=\"interviewers__list\">{interviewerList}</ul>\n    </section>\n  );\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"components/Button.scss\";\n\nexport default function Button(props) {\n  const buttonClass = classNames(\"button\", {\n    \"button--confirm\": props.confirm,\n    \"button--danger\": props.danger,\n  });\n\n  return (\n    <button\n      className={buttonClass}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\nimport InterviewerList from \"components/InterviewerList\";\nimport Button from \"components/Button\";\n\nexport default function Form(props) {\n  //console.log(\"form\", props)\n\n  const [interviewer, setInterviewer] = useState(props.interviewer || null);\n\n  const [student, setStudent] = useState(props.student || \"\");\n\n  const reset = () => {\n    setInterviewer(\"\");\n    setStudent(\"\");\n  };\n\n  const cancel = () => {\n    reset()\n    props.onCancel()\n  }\n\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n          <input\n            className=\"appointment__create-input text--semi-bold\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter Student Name\"\n            value={student}\n            onChange={(event) => setStudent(event.target.value)}\n          />\n        </form>\n        <InterviewerList\n          interviewers={props.interviewers}\n          value={interviewer}\n          onChange={setInterviewer}\n        />\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <Button danger onClick={cancel}>\n            Cancel\n          </Button>\n          <Button confirm onClick={() => props.save(student, interviewer)}>\n            Save\n          </Button>\n        </section>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\nimport Button from \"components/Button\"\n\nexport default function Confirm(props) {\n  return (\n    <main className=\"appointment__card appointment__card--confirm\">\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n      <section className=\"appointment__actions\">\n        <Button danger onClick={props.onCancel}>Cancel</Button>\n        <Button danger onClick={() => props.onConfirm()}>Confirm</Button>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function Error(props) {\n  return (\n    <main className=\"appointment__card appointment__card--error\">\n      <section className=\"appointment__error-message\">\n        <h1 className=\"text--semi-bold\">Error</h1>\n        <h3 className=\"text--light\">{props.message}</h3>\n      </section>\n      <img\n        className=\"appointment__error-close\"\n        src=\"images/close.png\"\n        alt=\"Close\"\n        onClick={props.onClose}\n      />\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function Status(props) {\n  console.log(\"status\", props)\n  return (\n    <main className=\"appointment__card appointment__card--status\">\n      <img\n        className=\"appointment__status-image\"\n        src=\"images/status.png\"\n        alt=\"Loading\"\n      />\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n    </main>\n  );\n}\n","import React from \"react\";\nimport Header from \"components/Appointment/Header\";\nimport Show from \"components/Appointment/Show\";\nimport Empty from \"components/Appointment/Empty\";\nimport Form from \"./Form\";\nimport Confirm from \"./Confirm\";\nimport Error from \"./Error\";\n\nimport useVisualMode from \"hooks/useVisualMode\";\n\nimport \"components/Appointment/styles.scss\";\nimport Status from \"components/Appointment/Status\";\nconst EMPTY = \"EMPTY\";\nconst SHOW = \"SHOW\";\nconst CREATE = \"CREATE\";\nconst SAVING = \"SAVING\";\nconst DELETING = \"DELETING\";\nconst CONFIRM_DELETE = \"CONFIRM_DELETE\";\nconst EDIT = \"EDIT\";\nconst ERROR_SAVE = \"ERROR_SAVE\";\nconst ERROR_DELETE = \"ERROR_DELETE\";\n\nexport default function Appointment(props) {\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\n\n  function save(name, interviewer) {\n    const interview = {\n      student: name,\n      interviewer,\n    };\n    transition(SAVING);\n    //console.log(\"mode\", mode)\n    props.bookInterview(props.id, interview)\n      .then((response) => {\n        transition(SHOW);\n      })\n      .catch((error) => {\n        transition(ERROR_SAVE)\n        console.log(error);\n      });\n  }\n\n  function cancel(name, interviewer) {\n    const interview = {\n      student: name,\n      interviewer,\n    };\n    transition(DELETING)\n    props.cancelInterview(props.id, interview)\n      .then((res) => {\n        transition(EMPTY);\n      })\n      .catch((err) => {\n        transition(ERROR_DELETE)\n        console.log(err);\n      });\n  }\n  \n  return (\n    <article className=\"appointment\">\n      <Header time={props.time} />\n      {mode === EMPTY && <Empty onAdd={() => transition(CREATE)} />}\n      {mode === SHOW && (\n        <Show\n          student={props.interview && props.interview.student}\n          interviewer={props.interview && props.interview.interviewer}\n          onDelete={() => transition(CONFIRM_DELETE)}\n          onEdit={() => transition(EDIT)}\n        />\n      )}\n      {mode === SAVING && <Status message={\"Saving\"} />}\n      {mode === DELETING && <Status message={\"Deleting\"} />}\n      {mode === CREATE && (\n        <Form onCancel={back} save={save} interviewers={props.interviewers} />\n      )}\n      {mode === EDIT && (\n        <Form onCancel={back} save={save} student={props.student} interviewers={props.interviewers} />\n      )}\n      {mode === CONFIRM_DELETE && <Confirm message={\"Delete this appointment?\"} onCancel={() => back()} onConfirm={() => cancel(props.student, props.interviewer)} />}\n      {mode === ERROR_DELETE && <Error message={\"could not delete\"} onClose={() => transition(SHOW, true)}/>}\n      {mode === ERROR_SAVE && <Error message={\"could not save\"} onClose={() => transition(EMPTY, true)}/>}\n\n      {/* {props.interview ? useVisualMode(SHOW) : useVisualMode(EMPTY)} */}\n\n      {/* {props.interview ? (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n        />\n      ) : (\n        <Empty />\n      )} */}\n      {/* {!props.time && <p> No Appointments</p>}\n      {props.time && <p> Appointment at {props.time} </p>} */}\n    </article>\n  );\n}\n","import { useState } from \"react\";\nexport default function useVisualMode(initial) {\n  const [mode, setMode] = useState(initial);\n  const [history, setHistory] = useState([initial]);\n\n  const transition = function (newMode, replace = false) {\n    if (replace) {\n      history.pop();\n    }\n    setMode(newMode);\n    history.push(newMode);\n  };\n\n  const back = function () {\n    if (history.length > 1) {\n      history.pop();\n      setMode(history[history.length - 1]);\n    }\n  };\n\n  return { mode, transition, back };\n}\n","export function getAppointmentsForDay(state, day) {\n  const target = day;\n  //transforming object into array\n  //console.log(\"State-4\", state.days);\n  const objArray = Object.entries(state.days);\n  //console.log(\"state-2\", objArray[\"1\"]);\n  let resultDay = [];\n  //console.log(typeof objArray)\n  for (let item in objArray) {\n    //console.log(\"OBJ ARRAY\", objArray[item][1].name)\n\n    if (objArray[item][1].name === target) {\n      resultDay.push(objArray[item][1]);\n    }\n  }\n\n  //console.log(\"RESULT DAY\", resultDay);\n  //filtering through array\n  // let resultDay = objArray.filter((days) => days.name === target);\n  // //change back to obj\n\n  //console.log(\"state-3\", resultDay)\n  resultDay = resultDay[0];\n\n  if (resultDay) {\n    const appointArray = [];\n\n    for (let item in state.appointments) {\n      appointArray.push(state.appointments[item]);\n    }\n\n    const filterAppoint = (num) => {\n      for (let item in resultDay.appointments) {\n        if (num.id === resultDay.appointments[item]) {\n          return resultDay.appointments[item];\n        }\n      }\n      return false;\n    };\n\n    const app = appointArray.filter(filterAppoint);\n\n    return app;\n  }\n\n  return [];\n}\nexport function getInterviewersForDay(state, day) {\n  const target = day;\n  let resultDay = [];\n  const objArray = Object.entries(state.days);\n\n  for (let item in objArray) {\n    if (objArray[item][1].name === target) {\n\n      resultDay.push(objArray[item][1])\n      //console.log(\"state-5\", objArray[item][1]);\n    }\n  }\n\n  // let resultDay = state.days.filter((days) => days.name === target);\n  \n  resultDay = resultDay[0];\n\n  if (resultDay) {\n    const interviewArray = [];\n\n    for (let item in state.interviewers) {\n      interviewArray.push(state.interviewers[item]);\n    }\n\n    const filterAppoint = (num) => {\n      for (let item in resultDay.interviewers) {\n        if (num.id === resultDay.interviewers[item]) {\n          return resultDay.interviewers[item];\n        }\n      }\n      return false;\n    };\n\n    const app = interviewArray.filter(filterAppoint);\n\n    return app;\n  }\n\n  return [];\n}\n\nexport function getInterview(state, interview) {\n  let newInterview = {};\n  if (interview) {\n    const interviewId = interview.interviewer;\n    const interviewerInfo = state.interviewers[interviewId];\n\n    newInterview[\"interviewer\"] = interviewerInfo;\n    newInterview[\"student\"] = interview.student;\n    return newInterview;\n  }\n  return null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"index.scss\";\n\nimport Application from \"components/Application\";\n\nReactDOM.render(<Application />, document.getElementById(\"root\"));\n","import React, { useState, useEffect } from \"react\";\nimport DayList from \"./DayList\";\nimport \"components/Appointment\";\n\n\nimport \"components/Application.scss\";\nimport Appointment from \"components/Appointment\";\nimport {\n  getAppointmentsForDay,\n  getInterview,\n  getInterviewersForDay,\n} from \"./helpers/selectors\";\nimport useApplicationData from \"hooks/useApplicationData\";\n\n\nexport default function Application(props) {\n  // const [day, setDay] = useState(\"Monday\");\n  // const [days, setDays] = useState([]);\n  const {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  } = useApplicationData();\n\n\n  console.log(\"listen\", state)\n  let dailyAppointments = getAppointmentsForDay(state, state.day);\n\n  const appointments = dailyAppointments.map((data) => {\n\n    let dailyInterviewers = getInterviewersForDay(state, state.day);\n\n    return (\n      <Appointment\n        key={data.id}\n        {...data}\n        interview={getInterview(state, data.interview)}\n        bookInterview={bookInterview}\n        cancelInterview={cancelInterview}\n        interviewers={dailyInterviewers}\n      />\n    );\n  });\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList days={state.days} value={state.day} setDay={setDay} />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {appointments}\n        <Appointment key=\"last\" time=\"5pm\" />\n      </section>\n    </main>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useApplicationData() {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: [],\n    interviewers: {},\n  });\n\n  //setState({ ...state, day: \"Tuesday\" });\n\n  const setDay = (day) => setState((prev) => ({ ...prev, day }));\n\n  const calculateSpots = (book = false, cancel = false) => {\n    //console.log(\"id\", id)\n\n    for (let item in state.days) {\n      if (state.days[item].name === state.day) {\n        if (book) {\n          let spotsCalc = (state.days[item].spots -= 1);\n\n          const days = {\n            ...state.days,\n            ...(state.days[item].spots = spotsCalc),\n          };\n\n          setState((prev) => ({ ...prev, days }));\n          //console.log(state.days[item].spots -= 1)\n        }\n        if (cancel) {\n          let spotsCalc = (state.days[item].spots += 1);\n\n          const days = {\n            ...state.days,\n            ...(state.days[item].spots = spotsCalc),\n          };\n          setState((prev) => ({ ...prev, days }));\n        }\n      }\n    }\n  };\n\n  function bookInterview(id, interview) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview },\n    };\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment,\n    };\n\n    return axios\n      .put(`http://localhost:8001/api/appointments/${id}`, { interview })\n      .then((response) => {\n        calculateSpots(true);\n        setState((prev) => ({ ...prev, appointments }));\n        \n      });\n  }\n\n  const cancelInterview = (id, interview) => {\n    console.log(\"cancel interview\", id, interview);\n    const appointment = {\n      ...state.appointments[id],\n      interview: null,\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment,\n    };\n\n    //console.log(\"CANCEL\", appointments);\n    return axios\n      .delete(`http://localhost:8001/api/appointments/${id}`)\n      .then((response) => {\n        calculateSpots(false, true);\n        setState((prev) => ({ ...prev, appointments }));\n        \n      });\n  };\n\n  // const setDays = (days) => setState((prev) => ({ ...prev, days }));\n\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"http://localhost:8001/api/days\"),\n      axios.get(\"http://localhost:8001/api/appointments\"),\n      axios.get(\"http://localhost:8001/api/interviewers\"),\n    ]).then((all) => {\n      console.log(\"ALL\", all);\n      setState((prev) => ({\n        ...prev,\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data,\n      }));\n    });\n  }, []);\n  return { state, setDay, bookInterview, cancelInterview };\n}\n"],"sourceRoot":""}